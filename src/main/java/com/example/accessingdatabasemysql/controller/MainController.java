package com.example.accessingdatabasemysql.controller;

import com.example.accessingdatabasemysql.dao.UserRepository;
import com.example.accessingdatabasemysql.entity.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller
@RequestMapping(path="/demo")
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;


    @PostMapping(path="/user/add") // Map ONLY POST Requests
    @ResponseStatus(value = HttpStatus.ACCEPTED)
    public @ResponseBody
    User addNewUser (@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        User n = new User();
        n.setName(name);
        n.setEmail(email);
        User u = userRepository.save(n);
        return u;
    }

    @GetMapping(path="/user/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @GetMapping(path="/user")
    public @ResponseBody User getOneUser(
            @RequestParam Integer id
        ) {
        // This returns a JSON or XML with the users
        return userRepository.findOneById(id);
    }
}
